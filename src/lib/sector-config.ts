// src/lib/sector-config.ts

export interface SectorConfig {
  name: string;
  icon: string;
  color: string;
  gradient: string;
  keywords: string[];
  features: {
    hasProducts: boolean;
    hasInventory: boolean;
    hasTeam: boolean;
    hasRooms: boolean;
    hasEquipment: boolean;
    hasPackages: boolean;
    hasLoyalty: boolean;
    hasWaitlist: boolean;
    hasPrePayment: boolean;
    hasRecurring: boolean;
  };
  customFields: {
    client: string[];
    service: string[];
    booking: string[];
  };
  defaultServices: {
    name: string;
    duration: number;
    price: number;
    description: string;
  }[];
  kpis: {
    primary: string[];
    secondary: string[];
  };
  automations: {
    reminderTemplate: string;
    confirmationTemplate: string;
    noShowTemplate: string;
  };
}

export const SECTOR_CONFIGS: { [key: string]: SectorConfig } = {
  barbier: {
    name: "Barbier / Coiffure Homme",
    icon: "üíà",
    color: "#1f2937",
    gradient: "from-gray-800 to-gray-900",
    keywords: ["barbier", "coiffure", "coupe", "barbe", "homme", "salon"],
    features: {
      hasProducts: true,
      hasInventory: true,
      hasTeam: true,
      hasRooms: false,
      hasEquipment: true,
      hasPackages: true,
      hasLoyalty: true,
      hasWaitlist: true,
      hasPrePayment: false,
      hasRecurring: true,
    },
    customFields: {
      client: ["Type de cheveux", "Longueur pr√©f√©r√©e", "Produits utilis√©s", "Allergies"],
      service: ["Technique", "Produits inclus", "Difficult√©"],
      booking: ["Coiffeur pr√©f√©r√©", "Derni√®re coupe", "Instructions sp√©ciales"]
    },
    defaultServices: [
      { name: "Coupe + Barbe", duration: 45, price: 35, description: "Coupe moderne avec taille de barbe" },
      { name: "Coupe Classique", duration: 30, price: 25, description: "Coupe traditionnelle aux ciseaux" },
      { name: "Barbe + Moustache", duration: 20, price: 15, description: "Taille et entretien de la barbe" },
      { name: "Coupe D√©grad√©", duration: 40, price: 30, description: "D√©grad√© moderne √† la tondeuse" },
      { name: "Shampooing + Coupe", duration: 50, price: 40, description: "Service complet avec shampooing" },
    ],
    kpis: ["Clients r√©guliers", "Produits vendus", "Temps moyen par coupe", "CA par coiffeur"],
    automations: {
      reminderTemplate: "Salut {clientName} ! Ton RDV coupe/barbe est pr√©vu demain √† {time} chez {businessName}. √Ä demain ! üíà",
      confirmationTemplate: "RDV confirm√© ! {clientName}, rendez-vous {date} √† {time} pour {serviceName} chez {businessName} üíà",
      noShowTemplate: "Dommage qu'on se soit loup√©s ! {clientName}, ton cr√©neau {serviceName} nous a manqu√©. Reprends vite RDV ! üíà"
    }
  },

  beaute: {
    name: "Institut de Beaut√©",
    icon: "üíÖ",
    color: "#ec4899",
    gradient: "from-pink-500 to-rose-600",
    keywords: ["beaut√©", "esth√©tique", "soin", "manucure", "p√©dicure", "√©pilation"],
    features: {
      hasProducts: true,
      hasInventory: true,
      hasTeam: true,
      hasRooms: true,
      hasEquipment: true,
      hasPackages: true,
      hasLoyalty: true,
      hasWaitlist: true,
      hasPrePayment: true,
      hasRecurring: true,
    },
    customFields: {
      client: ["Type de peau", "Allergies", "Traitements en cours", "Pr√©f√©rences couleur"],
      service: ["Zone trait√©e", "Produits utilis√©s", "Contre-indications"],
      booking: ["Esth√©ticienne pr√©f√©r√©e", "Historique soins", "Sensibilit√©s"]
    },
    defaultServices: [
      { name: "Soin visage complet", duration: 75, price: 65, description: "Nettoyage, gommage, masque et hydratation" },
      { name: "Manucure gel", duration: 45, price: 35, description: "Pose vernis gel longue dur√©e" },
      { name: "√âpilation jambes", duration: 30, price: 25, description: "√âpilation √† la cire traditionnelle" },
      { name: "P√©dicure + vernis", duration: 60, price: 40, description: "Soin des pieds complet avec vernis" },
      { name: "Extension cils", duration: 120, price: 85, description: "Pose d'extensions de cils individuelles" },
    ],
    kpis: ["Fid√©lit√© client", "Vente produits", "Taux rebooking", "Satisfaction soins"],
    automations: {
      reminderTemplate: "Bonjour {clientName} ! Votre soin {serviceName} est pr√©vu demain √† {time}. Pr√©parez-vous √† rayonner ! ‚ú®",
      confirmationTemplate: "C'est confirm√© ! {clientName}, rendez-vous {date} √† {time} pour votre {serviceName} üíÖ",
      noShowTemplate: "Nous aurions aim√© vous chouchouter ! {clientName}, votre soin nous a manqu√©. Reprenez vite RDV üíÖ"
    }
  },

  massage: {
    name: "Masseur / Bien-√™tre",
    icon: "üíÜ",
    color: "#059669",
    gradient: "from-emerald-500 to-teal-600",
    keywords: ["massage", "bien-√™tre", "d√©tente", "th√©rapie", "relaxation"],
    features: {
      hasProducts: false,
      hasInventory: false,
      hasTeam: true,
      hasRooms: true,
      hasEquipment: true,
      hasPackages: true,
      hasLoyalty: true,
      hasWaitlist: false,
      hasPrePayment: true,
      hasRecurring: true,
    },
    customFields: {
      client: ["Zones sensibles", "Probl√®mes de sant√©", "Pression pr√©f√©r√©e", "Huiles favorites"],
      service: ["Type de massage", "Huiles utilis√©es", "Bienfaits"],
      booking: ["Masseur pr√©f√©r√©", "Derni√®re s√©ance", "Objectifs th√©rapeutiques"]
    },
    defaultServices: [
      { name: "Massage relaxant", duration: 60, price: 55, description: "Massage d√©tente corps entier" },
      { name: "Massage sportif", duration: 45, price: 50, description: "Massage r√©cup√©ration pour sportifs" },
      { name: "Massage dos/nuque", duration: 30, price: 35, description: "Cibl√© tensions du haut du corps" },
      { name: "Massage pierres chaudes", duration: 75, price: 70, description: "Relaxation profonde aux pierres" },
      { name: "R√©flexologie plantaire", duration: 45, price: 45, description: "Massage th√©rapeutique des pieds" },
    ],
    kpis: ["Taux de d√©tente", "S√©ances r√©guli√®res", "Satisfaction client", "Dur√©e moyenne"],
    automations: {
      reminderTemplate: "Bonjour {clientName}, votre moment d√©tente {serviceName} est demain √† {time}. Pr√©parez-vous √† d√©compresser ! üßò",
      confirmationTemplate: "Votre pause bien-√™tre est confirm√©e ! {clientName}, RDV {date} √† {time} pour {serviceName} üíÜ",
      noShowTemplate: "Votre moment d√©tente nous a √©chapp√© ! {clientName}, nous aurions aim√© vous relaxer. √Ä bient√¥t ! üíÜ"
    }
  },

  restaurant: {
    name: "Restaurant / Traiteur",
    icon: "üçΩÔ∏è",
    color: "#dc2626",
    gradient: "from-red-500 to-orange-600",
    keywords: ["restaurant", "traiteur", "r√©servation", "table", "cuisine", "chef"],
    features: {
      hasProducts: false,
      hasInventory: false,
      hasTeam: true,
      hasRooms: false,
      hasEquipment: false,
      hasPackages: true,
      hasLoyalty: true,
      hasWaitlist: true,
      hasPrePayment: true,
      hasRecurring: false,
    },
    customFields: {
      client: ["Allergies alimentaires", "R√©gime sp√©cial", "Pr√©f√©rences", "Occasion"],
      service: ["Nombre de personnes", "Menu", "Allerg√®nes"],
      booking: ["Nombre de couverts", "Demandes sp√©ciales", "Placement"]
    },
    defaultServices: [
      { name: "Table 2 personnes", duration: 90, price: 0, description: "R√©servation table pour 2" },
      { name: "Table 4 personnes", duration: 120, price: 0, description: "R√©servation table pour 4" },
      { name: "Menu d√©gustation", duration: 150, price: 85, description: "Menu 7 services du chef" },
      { name: "Brunch weekend", duration: 120, price: 35, description: "Formule brunch buffet" },
      { name: "Privatisation salle", duration: 240, price: 500, description: "Location salle priv√©e" },
    ],
    kpis: ["Taux d'occupation", "Panier moyen", "No-show rate", "Satisfaction client"],
    automations: {
      reminderTemplate: "Bonjour {clientName}, votre table est r√©serv√©e demain √† {time}. Nous avons h√¢te de vous accueillir ! üçΩÔ∏è",
      confirmationTemplate: "Table confirm√©e ! {clientName}, nous vous attendons {date} √† {time} üçΩÔ∏è",
      noShowTemplate: "Votre table nous a attendu ! {clientName}, nous esp√©rons vous voir bient√¥t üçΩÔ∏è"
    }
  },

  fitness: {
    name: "Coach Sportif / Fitness",
    icon: "üí™",
    color: "#7c3aed",
    gradient: "from-purple-500 to-indigo-600",
    keywords: ["fitness", "sport", "coach", "musculation", "cardio", "entra√Ænement"],
    features: {
      hasProducts: true,
      hasInventory: false,
      hasTeam: true,
      hasRooms: false,
      hasEquipment: true,
      hasPackages: true,
      hasLoyalty: true,
      hasWaitlist: false,
      hasPrePayment: true,
      hasRecurring: true,
    },
    customFields: {
      client: ["Objectifs", "Niveau", "Blessures", "Disponibilit√©s"],
      service: ["Intensit√©", "Mat√©riel requis", "Pr√©requis"],
      booking: ["Coach pr√©f√©r√©", "Programme en cours", "Objectif s√©ance"]
    },
    defaultServices: [
      { name: "S√©ance coaching 1h", duration: 60, price: 50, description: "Entra√Ænement personnalis√© individuel" },
      { name: "Cours collectif", duration: 45, price: 15, description: "S√©ance en groupe (max 8 pers)" },
      { name: "√âvaluation physique", duration: 90, price: 70, description: "Bilan complet + programme" },
      { name: "Coaching nutrition", duration: 30, price: 40, description: "Consultation di√©t√©tique" },
      { name: "Pr√©paration physique", duration: 75, price: 65, description: "Entra√Ænement sp√©cifique sport" },
    ],
    kpis: ["Progression clients", "Assiduit√©", "Objectifs atteints", "R√©tention"],
    automations: {
      reminderTemplate: "Salut {clientName} ! Ta s√©ance {serviceName} est pr√©vue demain √† {time}. Pr√™t(e) √† tout donner ? üí™",
      confirmationTemplate: "C'est parti ! {clientName}, RDV {date} √† {time} pour {serviceName}. Let's go ! üí™",
      noShowTemplate: "On t'a attendu pour transpirer ! {clientName}, ta motivation nous a manqu√©. Reviens vite ! üí™"
    }
  },

  sante: {
    name: "Professionnel de Sant√©",
    icon: "üè•",
    color: "#0ea5e9",
    gradient: "from-blue-500 to-cyan-600",
    keywords: ["m√©decin", "dentiste", "kin√©", "ost√©opathe", "sant√©", "consultation"],
    features: {
      hasProducts: false,
      hasInventory: false,
      hasTeam: true,
      hasRooms: true,
      hasEquipment: true,
      hasPackages: false,
      hasLoyalty: false,
      hasWaitlist: true,
      hasPrePayment: false,
      hasRecurring: true,
    },
    customFields: {
      client: ["Mutuelle", "M√©decin traitant", "Ant√©c√©dents", "Traitements"],
      service: ["Sp√©cialit√©", "Remboursement", "Dur√©e consultation"],
      booking: ["Motif consultation", "Urgence", "Praticien souhait√©"]
    },
    defaultServices: [
      { name: "Consultation g√©n√©rale", duration: 30, price: 25, description: "Consultation m√©decine g√©n√©rale" },
      { name: "S√©ance kin√©sith√©rapie", duration: 30, price: 35, description: "S√©ance de r√©√©ducation" },
      { name: "Consultation sp√©cialis√©e", duration: 45, price: 50, description: "Consultation sp√©cialiste" },
      { name: "Bilan de sant√©", duration: 60, price: 80, description: "Check-up m√©dical complet" },
      { name: "Urgence", duration: 15, price: 30, description: "Consultation urgente" },
    ],
    kpis: ["Taux de gu√©rison", "Ponctualit√©", "Satisfaction patient", "Efficacit√©"],
    automations: {
      reminderTemplate: "Bonjour {clientName}, votre RDV {serviceName} est pr√©vu demain √† {time} avec {businessName}",
      confirmationTemplate: "RDV confirm√© ! {clientName}, consultation {date} √† {time} pour {serviceName}",
      noShowTemplate: "Votre RDV nous a manqu√©. {clientName}, merci de reprogrammer votre consultation"
    }
  }
};

export function detectSector(services: any[], businessName?: string, description?: string): string {
  const allText = [
    ...(services?.map(s => `${s.name} ${s.description} ${s.category}`) || []),
    businessName || "",
    description || ""
  ].join(" ").toLowerCase();

  let maxScore = 0;
  let detectedSector = "general";

  Object.entries(SECTOR_CONFIGS).forEach(([sectorKey, config]) => {
    const score = config.keywords.reduce((acc, keyword) => {
      const count = (allText.match(new RegExp(keyword, "gi")) || []).length;
      return acc + count;
    }, 0);

    if (score > maxScore) {
      maxScore = score;
      detectedSector = sectorKey;
    }
  });

  return detectedSector;
}

export function getSectorConfig(sector: string): SectorConfig {
  return SECTOR_CONFIGS[sector] || SECTOR_CONFIGS.general || {
    name: "Activit√© G√©n√©rale",
    icon: "üè¢",
    color: "#6b7280",
    gradient: "from-gray-500 to-gray-600",
    keywords: [],
    features: {
      hasProducts: false,
      hasInventory: false,
      hasTeam: false,
      hasRooms: false,
      hasEquipment: false,
      hasPackages: false,
      hasLoyalty: false,
      hasWaitlist: false,
      hasPrePayment: false,
      hasRecurring: false,
    },
    customFields: {
      client: [],
      service: [],
      booking: []
    },
    defaultServices: [],
    kpis: ["R√©servations", "Clients", "CA", "Satisfaction"],
    automations: {
      reminderTemplate: "Bonjour {clientName}, votre RDV {serviceName} est demain √† {time}",
      confirmationTemplate: "RDV confirm√© ! {clientName}, √† {date} √† {time} pour {serviceName}",
      noShowTemplate: "Votre RDV nous a manqu√© {clientName}. Reprogrammons vite !"
    }
  };
}